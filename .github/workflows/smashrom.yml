name: ROM Smasher

on:
  workflow_dispatch:
    inputs:
      ROMURL:
        description: 'ROM Directly download link'
        required: true
        default: ''

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Check Out
      uses: actions/checkout@v3

    - name: Update packages and install depencies
      run: |
        sudo apt update
        sudo apt upgrade -y
        sudo apt install -y zip p7zip e2fsprogs aria2 tar brotli
        pip3 install brotli

    - name: Download ROM
      run: |
        cd /home
        sudo mkdir rom && sudo chmod 777 rom && cd rom
        aria2c "${{ github.event.inputs.ROMURL }}" || exit 1
        sudo chmod 777 *

    - name: Extract ROM
      run: |
        cd /home/rom
        if [ -f *.7z ]; then
            7z x *.7z
            rm *.7z
        elif [ -f *.zip ]; then
            unzip *.zip || exit 1
            rm *.zip
        elif [ -f *.tgz ]; then
            tar -xf *.tgz || exit 1
            rm *.tgz
        else
            echo "Unsupported file format. File name: $(basename *)"
            exit 1
        fi
        mkdir extr
        move_image() {
            mv "$1" /home/rom/extr || exit 1
            echo "Moved: $1"
        }
        getall() {
            for img in "$1"/*; do
                if [ -f "$img" ] && [[ ! "$img" == *"/extr/"* ]]; then
                    if [[ "$img" == *".img" ]]; then
                        move_image "$img"
                    elif [[ "$img" == *".bin" ]]; then
                        move_image "$img"
                    elif [[ "$img" == *"MT"*".txt" ]]; then
                        move_image "$img"
                    elif [[ "$img" == *"raw"*".xml" ]]; then
                        move_image "$img"
                    elif [[ "$img" == *".br" ]]; then
                        move_image "$img"
                    elif [[ "$img" == *".dat" ]]; then
                        move_image "$img"
                    elif [[ "$img" == *".list" ]]; then
                        move_image "$img"
                    elif [[ "$img" == *".mbn" ]]; then
                        move_image "$img"
                    fi
                elif [ -d "$img" ] && [[ ! "$img" == *"/extr/"* ]]; then
                    getall "$img"
                fi
            done
        }
        getall "$(pwd)"

    - name: Prepare to upload
      run: |
        cd /home/rom/extr
        system_is_normal=true
        vendor_is_normal=true
        product_is_normal=true
        wget "https://github.com/xpirt/sdat2img/raw/master/sdat2img.py"
        sudo chmod 777 sdat2img.py
        for br in "$(pwd)"/*.br; do
            if [[ "$br" == *"system"* ]]; then
                system_is_normal=false
                brotli -d "$br" -o system.new.dat
                rm "$br"
            elif [[ "$br" == *"vendor"* ]]; then
                vendor_is_normal=false
                brotli -d "$br" -o vendor.new.dat
                rm "$br"
            elif [[ "$br" == *"product"* ]]; then
                product_is_normal=false
                brotli -d "$br" -o product.new.dat
                rm "$br"
            fi
        done
        for dat in "$(pwd)"/*.dat; do
            if [[ "$dat" == *"system"* ]]; then
                python sdat2img.py system.transfer.list "$dat" system.img
                rm "$dat"
            elif [[ "$dat" == *"vendor"* ]]; then
                python sdat2img.py vendor.transfer.list "$dat" vendor.img
                rm "$dat"
            elif [[ "$dat" == *"product"* ]]; then
                python sdat2img.py product.transfer.list "$dat" product.img
                rm "$dat"
            fi
        done
        rm sdat2img.py
        for file in "$(pwd)"/*; do
            if [[ "$file" == *"system"* ]] && [[ "$system_is_normal" == "true" ]]; then
                resize2fs -M "$file"
            elif [[ "$file" == *"system_ext"* ]]; then
                resize2fs -M "$file"
            elif [[ "$file" == *"vendor"* ]] && [[ "$vendor_is_normal" == "true" ]]; then
                resize2fs -M "$file"
            elif [[ "$file" == *"product"* ]] && [[ "$product_is_normal" == "true" ]]; then
                resize2fs -M "$file"
            elif [[ "$file" == *"mi_ext"* ]]; then
                resize2fs -M "$file"
            fi
        done
        max_size="1933156864"
        for image in "$(pwd)"/*; do
           if [[ $(stat -c %s "$image") -gt $max_size ]]; then
               xz "$image"
               rm -f "$image"
           fi
        done
        
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: |
          /home/rom/extr/*
        name: Extracted ROM ${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Extracted ROM ${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
